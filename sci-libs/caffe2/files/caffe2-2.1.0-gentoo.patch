diff -ur caffe2-2.1.0.orig/c10/CMakeLists.txt caffe2-2.1.0/c10/CMakeLists.txt
--- caffe2-2.1.0.orig/c10/CMakeLists.txt	2023-10-05 14:53:15.817493823 +0200
+++ caffe2-2.1.0/c10/CMakeLists.txt	2023-10-05 14:53:36.057336647 +0200
@@ -87,7 +87,7 @@
 if(${USE_GLOG})
     target_link_libraries(c10 PUBLIC glog::glog)
 endif()
-target_link_libraries(c10 PRIVATE fmt::fmt-header-only)
+target_link_libraries(c10 PRIVATE fmt)
 
 find_package(Backtrace)
 if(Backtrace_FOUND)
diff -ur caffe2-2.1.0.orig/caffe2/CMakeLists.txt caffe2-2.1.0/caffe2/CMakeLists.txt
--- caffe2-2.1.0.orig/caffe2/CMakeLists.txt	2023-10-05 14:53:15.817493823 +0200
+++ caffe2-2.1.0/caffe2/CMakeLists.txt	2023-10-05 14:53:36.057336647 +0200
@@ -107,7 +107,7 @@
 # Note: the folders that are being commented out have not been properly
 # addressed yet.
 
-if(NOT MSVC AND USE_XNNPACK)
+if(FALSE)
   if(NOT TARGET fxdiv)
     set(FXDIV_BUILD_TESTS OFF CACHE BOOL "")
     set(FXDIV_BUILD_BENCHMARKS OFF CACHE BOOL "")
@@ -1023,7 +1023,6 @@
 endif()
 
 if(NOT MSVC AND USE_XNNPACK)
-  TARGET_LINK_LIBRARIES(torch_cpu PRIVATE fxdiv)
 endif()
 
 # ==========================================================
diff -ur caffe2-2.1.0.orig/cmake/Codegen.cmake caffe2-2.1.0/cmake/Codegen.cmake
--- caffe2-2.1.0.orig/cmake/Codegen.cmake	2023-10-05 14:53:12.947516107 +0200
+++ caffe2-2.1.0/cmake/Codegen.cmake	2023-10-05 14:53:36.057336647 +0200
@@ -57,7 +57,7 @@
   if(MSVC)
     set(OPT_FLAG "/fp:strict ")
   else(MSVC)
-    set(OPT_FLAG "-O3 ")
+    set(OPT_FLAG " ")
     if("${CMAKE_BUILD_TYPE}" MATCHES "Debug")
       set(OPT_FLAG " ")
     endif()
diff -ur caffe2-2.1.0.orig/cmake/Dependencies.cmake caffe2-2.1.0/cmake/Dependencies.cmake
--- caffe2-2.1.0.orig/cmake/Dependencies.cmake	2023-10-05 14:53:12.947516107 +0200
+++ caffe2-2.1.0/cmake/Dependencies.cmake	2023-10-05 14:58:02.915264350 +0200
@@ -487,7 +487,7 @@
 list(APPEND Caffe2_DEPENDENCY_LIBS cpuinfo)
 
 # ---[ QNNPACK
-if(USE_QNNPACK)
+if(FALSE)
   set(CAFFE2_THIRD_PARTY_ROOT "${PROJECT_SOURCE_DIR}/third_party")
 
   if(NOT DEFINED QNNPACK_SOURCE_DIR)
@@ -543,7 +543,7 @@
 endif()
 
 # ---[ Caffe2 Int8 operators (enabled by USE_QNNPACK) depend on gemmlowp and neon2sse headers
-if(USE_QNNPACK)
+if(FALSE)
   set(CAFFE2_THIRD_PARTY_ROOT "${PROJECT_SOURCE_DIR}/third_party")
   include_directories(SYSTEM "${CAFFE2_THIRD_PARTY_ROOT}/gemmlowp")
   include_directories(SYSTEM "${CAFFE2_THIRD_PARTY_ROOT}/neon2sse")
@@ -1244,7 +1244,7 @@
 
 # ---[ cuDNN
 if(USE_CUDNN)
-  set(CUDNN_FRONTEND_INCLUDE_DIR ${CMAKE_CURRENT_LIST_DIR}/../third_party/cudnn_frontend/include)
+  set(CUDNN_FRONTEND_INCLUDE_DIR /opt/cuda/targets/x86_64-linux/include)
   target_include_directories(torch::cudnn INTERFACE ${CUDNN_FRONTEND_INCLUDE_DIR})
 endif()
 
@@ -1555,7 +1555,6 @@
       set_target_properties(onnx_proto PROPERTIES CXX_STANDARD 17)
     endif()
   endif()
-  add_subdirectory(${CMAKE_CURRENT_LIST_DIR}/../third_party/foxi EXCLUDE_FROM_ALL)
 
   add_definitions(-DONNX_NAMESPACE=${ONNX_NAMESPACE})
   if(NOT USE_SYSTEM_ONNX)
@@ -1834,7 +1833,6 @@
 #
 set(TEMP_BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS})
 set(BUILD_SHARED_LIBS OFF CACHE BOOL "Build shared libs" FORCE)
-add_subdirectory(${PROJECT_SOURCE_DIR}/third_party/fmt)
 
 # Disable compiler feature checks for `fmt`.
 #
@@ -1843,9 +1841,7 @@
 # CMAKE_CXX_FLAGS in ways that break feature checks. Since we already know
 # `fmt` is compatible with a superset of the compilers that PyTorch is, it
 # shouldn't be too bad to just disable the checks.
-set_target_properties(fmt-header-only PROPERTIES INTERFACE_COMPILE_FEATURES "")
 
-list(APPEND Caffe2_DEPENDENCY_LIBS fmt::fmt-header-only)
 set(BUILD_SHARED_LIBS ${TEMP_BUILD_SHARED_LIBS} CACHE BOOL "Build shared libs" FORCE)
 
 # ---[ Kineto
diff -ur caffe2-2.1.0.orig/cmake/External/nnpack.cmake caffe2-2.1.0/cmake/External/nnpack.cmake
--- caffe2-2.1.0.orig/cmake/External/nnpack.cmake	2023-10-05 14:53:12.957516030 +0200
+++ caffe2-2.1.0/cmake/External/nnpack.cmake	2023-10-05 14:53:36.057336647 +0200
@@ -58,7 +58,7 @@
   set(PTHREADPOOL_SOURCE_DIR "${CAFFE2_THIRD_PARTY_ROOT}/pthreadpool" CACHE STRING "pthreadpool source directory")
   set(GOOGLETEST_SOURCE_DIR "${CAFFE2_THIRD_PARTY_ROOT}/googletest" CACHE STRING "Google Test source directory")
 
-  if(NOT TARGET nnpack)
+  if(FALSE)
     if(NOT USE_SYSTEM_PTHREADPOOL AND USE_INTERNAL_PTHREADPOOL_IMPL)
       set(NNPACK_CUSTOM_THREADPOOL ON CACHE BOOL "")
     endif()
diff -ur caffe2-2.1.0.orig/cmake/public/utils.cmake caffe2-2.1.0/cmake/public/utils.cmake
--- caffe2-2.1.0.orig/cmake/public/utils.cmake	2023-10-05 14:53:12.957516030 +0200
+++ caffe2-2.1.0/cmake/public/utils.cmake	2023-10-05 14:53:36.057336647 +0200
@@ -492,8 +492,6 @@
   endif()
 
   # Use -O2 for release builds (-O3 doesn't improve perf, and -Os results in perf regression)
-  target_compile_options(${libname} PRIVATE
-      $<$<AND:$<COMPILE_LANGUAGE:CXX>,$<OR:$<CONFIG:Release>,$<CONFIG:RelWithDebInfo>>>:-O2>)
 
 endfunction()
 
diff -ur caffe2-2.1.0.orig/CMakeLists.txt caffe2-2.1.0/CMakeLists.txt
--- caffe2-2.1.0.orig/CMakeLists.txt	2023-10-05 14:53:15.927492969 +0200
+++ caffe2-2.1.0/CMakeLists.txt	2023-10-05 14:53:36.057336647 +0200
@@ -812,12 +812,11 @@
 
 # ---[ Build flags
 if(NOT MSVC)
-  string(APPEND CMAKE_CXX_FLAGS " -O2 -fPIC")
+  string(APPEND CMAKE_CXX_FLAGS " -fPIC")
   # Eigen fails to build with some versions, so convert this to a warning
   # Details at http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1459
   string(APPEND CMAKE_CXX_FLAGS " -Wall")
   string(APPEND CMAKE_CXX_FLAGS " -Wextra")
-  append_cxx_flag_if_supported("-Werror=return-type" CMAKE_CXX_FLAGS)
   append_cxx_flag_if_supported("-Werror=non-virtual-dtor" CMAKE_CXX_FLAGS)
   append_cxx_flag_if_supported("-Werror=braced-scalar-init" CMAKE_CXX_FLAGS)
   append_cxx_flag_if_supported("-Werror=range-loop-construct" CMAKE_CXX_FLAGS)
@@ -917,8 +916,6 @@
   string(APPEND CMAKE_LINKER_FLAGS_DEBUG " -fno-omit-frame-pointer -O0")
   append_cxx_flag_if_supported("-fno-math-errno" CMAKE_CXX_FLAGS)
   append_cxx_flag_if_supported("-fno-trapping-math" CMAKE_CXX_FLAGS)
-  append_cxx_flag_if_supported("-Werror=format" CMAKE_CXX_FLAGS)
-  append_cxx_flag_if_supported("-Werror=cast-function-type" CMAKE_CXX_FLAGS)
 else()
   # skip unwanted includes from windows.h
   add_compile_definitions(WIN32_LEAN_AND_MEAN)
diff -ur caffe2-2.1.0.orig/torch/CMakeLists.txt caffe2-2.1.0/torch/CMakeLists.txt
--- caffe2-2.1.0.orig/torch/CMakeLists.txt	2023-10-05 14:53:15.787494053 +0200
+++ caffe2-2.1.0/torch/CMakeLists.txt	2023-10-05 14:53:36.057336647 +0200
@@ -63,14 +63,6 @@
     ${CMAKE_BINARY_DIR}
     ${CMAKE_BINARY_DIR}/aten/src
     ${CMAKE_BINARY_DIR}/caffe2/aten/src
-    ${CMAKE_BINARY_DIR}/third_party
-    ${CMAKE_BINARY_DIR}/third_party/onnx
-
-    ${TORCH_ROOT}/third_party/valgrind-headers
-
-    ${TORCH_ROOT}/third_party/gloo
-    ${TORCH_ROOT}/third_party/onnx
-    ${TORCH_ROOT}/third_party/flatbuffers/include
     ${TORCH_ROOT}/third_party/kineto/libkineto/include
 
     ${TORCH_SRC_DIR}/csrc
@@ -84,7 +76,6 @@
     python::python
     pybind::pybind11
     shm
-    fmt::fmt-header-only
     ATEN_CPU_FILES_GEN_LIB)
 
 if(USE_ASAN AND TARGET Sanitizer::address)
