From 9724db6edbfd3ab9ff2f16bacb9215bef9f902d0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C8=98tefan=20Talpalaru?= <stefantalpalaru@yahoo.com>
Date: Wed, 24 Apr 2019 14:11:04 +0200
Subject: [PATCH] CMake-related changes

- generate and install DOtherSide.pc for pkg-config
- make docs, tests and static library optional
- .gitignore: add CMake artefacts
---
 .gitignore          | 26 ++++++++++++++++++++++++++
 CMakeLists.txt      | 16 ++++++++++++++--
 DOtherSide.pc.cmake | 14 ++++++++++++++
 lib/CMakeLists.txt  | 26 +++++++++++++++++++-------
 4 files changed, 73 insertions(+), 9 deletions(-)
 create mode 100644 DOtherSide.pc.cmake

diff --git a/.gitignore b/.gitignore
index 54c4a01..3a0768d 100644
--- a/.gitignore
+++ b/.gitignore
@@ -11,3 +11,29 @@ nimcache
 *.orig
 doc
 cmake-build-*
+
+# libraries
+*.a
+*.so
+*.so.*
+
+# CMake
+CMakeLists.txt.user
+CMakeCache.txt
+CMakeFiles
+CMakeScripts
+Testing
+Makefile
+cmake_install.cmake
+install_manifest.txt
+compile_commands.json
+CTestTestfile.cmake
+_deps
+*_autogen
+CMakeDoxyfile.in
+CMakeDoxygenDefaults.cmake
+DOtherSide.pc
+
+# binaries
+test/TestDynamicQObject
+
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4c3d984..045cfef 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,5 +1,9 @@
 cmake_minimum_required(VERSION 3.2)
 
+# Options
+option(ENABLE_DOCS "Enable docs" ON)
+option(ENABLE_TESTS "Enable tests" ON)
+option(ENABLE_STATIC_LIBS "Enable static libraries" ON)
 
 project(DOtherSide
   VERSION 0.9.0
@@ -25,6 +29,14 @@ if (MSVC)
   add_compile_options(/bigobj)
 endif()
 
+# Subdirectories
 add_subdirectory(lib)
-add_subdirectory(doc)
-add_subdirectory(test)
+
+if(ENABLE_DOCS)
+  add_subdirectory(doc)
+endif()
+
+if(ENABLE_TESTS)
+  add_subdirectory(test)
+endif()
+
diff --git a/DOtherSide.pc.cmake b/DOtherSide.pc.cmake
new file mode 100644
index 0000000..3328ba5
--- /dev/null
+++ b/DOtherSide.pc.cmake
@@ -0,0 +1,14 @@
+prefix=@CMAKE_INSTALL_PREFIX@
+exec_prefix=@CMAKE_INSTALL_PREFIX@
+libdir=@CMAKE_INSTALL_FULL_LIBDIR@
+sharedlibdir=@CMAKE_INSTALL_FULL_LIBDIR@
+includedir=@CMAKE_INSTALL_FULL_INCLUDEDIR@
+
+Name: @PROJECT_NAME@
+Description: C language library for creating bindings for the Qt QML language
+Version: @CMAKE_PROJECT_VERSION@
+
+Requires: @PC_REQUIRES@
+Libs: -L${libdir} -lDOtherSide
+Cflags: -I${includedir}
+
diff --git a/lib/CMakeLists.txt b/lib/CMakeLists.txt
index 53da707..df378a6 100644
--- a/lib/CMakeLists.txt
+++ b/lib/CMakeLists.txt
@@ -1,10 +1,14 @@
 include(GNUInstallDirs)
 
 set(QTPREFIX "Qt")
+set(QTPREFIX_PC "Qt6")
+
+include(GNUInstallDirs)
 
 find_package(Qt6 COMPONENTS Core Qml Gui Quick QuickControls2 Widgets)
 if (NOT Qt6_FOUND)
     set(QTPREFIX "Qt5")
+    set(QTPREFIX_PC "Qt5")
     find_package(Qt5 COMPONENTS Core Qml Gui Quick QuickControls2 Widgets)
 endif()
 
@@ -51,9 +55,16 @@ macro(add_target name type)
 
     target_link_libraries(${name} PRIVATE ${QTPREFIX}::Core ${QTPREFIX}::CorePrivate ${QTPREFIX}::Gui ${QTPREFIX}::Widgets ${QTPREFIX}::Qml ${QTPREFIX}::Quick)
 
+    # for DOtherSide.pc
+    set(PC_REQUIRES "${QTPREFIX_PC}Core, ${QTPREFIX_PC}Gui, ${QTPREFIX_PC}Widgets, ${QTPREFIX_PC}Qml, ${QTPREFIX_PC}Quick")
     if (${Qt5QuickControls2_FOUND})
-        target_link_libraries(${name} PRIVATE ${QTPREFIX}::QuickControls2)
+	target_link_libraries(${name} PRIVATE ${QTPREFIX}::QuickControls2)
+	set(PC_REQUIRES "${PC_REQUIRES}, ${QTPREFIX_PC}QuickControls2")
     endif()
+
+    install(TARGETS ${name}
+      LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+    )
 endmacro()
 
 # Add shared version
@@ -68,7 +79,9 @@ PROPERTIES
 )
 
 # Add static version
-add_target(${PROJECT_NAME}Static STATIC)
+if(ENABLE_STATIC_LIBS)
+    add_target(${PROJECT_NAME}Static STATIC)
+endif(ENABLE_STATIC_LIBS)
 
 # Install directive for header files
 install(FILES
@@ -77,11 +90,10 @@ install(FILES
   DESTINATION include/DOtherSide
 )
 
-# Install directive for binaries
-install(TARGETS ${PROJECT_NAME}
-  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
-  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-)
+# pkg-config file
+configure_file(${CMAKE_SOURCE_DIR}/DOtherSide.pc.cmake ${CMAKE_BINARY_DIR}/DOtherSide.pc @ONLY)
+install(FILES ${CMAKE_BINARY_DIR}/DOtherSide.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
+
 
 # Install Pkg-Config definition
 configure_file(DOtherSide.pc.in DOtherSide.pc @ONLY)
-- 
2.37.3

