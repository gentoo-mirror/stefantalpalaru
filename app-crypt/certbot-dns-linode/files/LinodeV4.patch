From 3f25f9a789f84202e83f6807f9ed2d04ec3480a0 Mon Sep 17 00:00:00 2001
From: Trinopoty Biswas <trinopoty@hotmail.com>
Date: Tue, 11 Dec 2018 16:35:54 +0530
Subject: [PATCH 1/2] Added support for linode version 4 tokens

---
 .../certbot_dns_linode/__init__.py            |  3 +-
 .../certbot_dns_linode/dns_linode.py          | 34 +++++++++++---
 .../certbot_dns_linode/dns_linode_test.py     | 45 +++++++++++++++++--
 setup.py                   |  2 +-
 4 files changed, 72 insertions(+), 12 deletions(-)

diff --git a/certbot_dns_linode/__init__.py b/certbot_dns_linode/__init__.py
index 0a6ccec61c..fee4fdf4e8 100644
--- a/certbot_dns_linode/__init__.py
+++ b/certbot_dns_linode/__init__.py
@@ -27,7 +27,8 @@
 
 Use of this plugin requires a configuration file containing Linode API
 credentials, obtained from your Linode account's `Applications & API
-Tokens page <https://manager.linode.com/profile/api>`_.
+Tokens page v3 <https://manager.linode.com/profile/api>`_ or `Applications &
+API Tokens page v4 <https://cloud.linode.com/profile/tokens>`_.
 
 .. code-block:: ini
    :name: credentials.ini
diff --git a/certbot_dns_linode/dns_linode.py b/certbot_dns_linode/dns_linode.py
index 01da2cf604..125909239f 100644
--- a/certbot_dns_linode/dns_linode.py
+++ b/certbot_dns_linode/dns_linode.py
@@ -1,8 +1,10 @@
 """DNS Authenticator for Linode."""
 import logging
+import re
 
 import zope.interface
 from lexicon.providers import linode
+from lexicon.providers import linode4
 
 from certbot import errors
 from certbot import interfaces
@@ -12,6 +14,7 @@
 logger = logging.getLogger(__name__)
 
 API_KEY_URL = 'https://manager.linode.com/profile/api'
+API_KEY_URL_V4 = 'https://cloud.linode.com/profile/tokens'
 
 @zope.interface.implementer(interfaces.IAuthenticator)
 @zope.interface.provider(interfaces.IPluginFactory)
@@ -41,7 +44,8 @@ def _setup_credentials(self):
             'credentials',
             'Linode credentials INI file',
             {
-                'key': 'API key for Linode account, obtained from {0}'.format(API_KEY_URL)
+                'key': 'API key for Linode account, obtained from {0} or {1}'
+                        .format(API_KEY_URL, API_KEY_URL_V4)
             }
         )
 
@@ -52,19 +56,35 @@ def _cleanup(self, domain, validation_name, validation):
         self._get_linode_client().del_txt_record(domain, validation_name, validation)
 
     def _get_linode_client(self):
-        return _LinodeLexiconClient(self.credentials.conf('key'))
+        api_key = self.credentials.conf('key')
+        api_version = 3
+
+        # Match for v4 api key
+        regex_v4 = re.compile('^[0-9a-f]{64}$')
+        regex_match = regex_v4.match(api_key)
+        if regex_match:
+            api_version = 4
+
+        return _LinodeLexiconClient(api_key, api_version)
 
 class _LinodeLexiconClient(dns_common_lexicon.LexiconClient):
     """
     Encapsulates all communication with the Linode API.
     """
 
-    def __init__(self, api_key):
+    def __init__(self, api_key, api_version):
         super(_LinodeLexiconClient, self).__init__()
-        self.provider = linode.Provider({
-            'provider_name': 'linode',
-            'auth_token': api_key
-        })
+        self.api_version = api_version
+        if api_version == 3:
+            self.provider = linode.Provider({
+                'provider_name': 'linode',
+                'auth_token': api_key
+            })
+        elif api_version == 4:
+            self.provider = linode4.Provider({
+                'provider_name': 'linode4',
+                'auth_token': api_key
+            })
 
     def _handle_general_error(self, e, domain_name):
         if not str(e).startswith('Domain not found'):
diff --git a/certbot_dns_linode/dns_linode_test.py b/certbot_dns_linode/dns_linode_test.py
index 2a0ee49f7c..43ecb07892 100644
--- a/certbot_dns_linode/dns_linode_test.py
+++ b/certbot_dns_linode/dns_linode_test.py
@@ -8,8 +8,11 @@
 from certbot.plugins import dns_test_common
 from certbot.plugins import dns_test_common_lexicon
 from certbot.tests import util as test_util
+from certbot_dns_linode.dns_linode import Authenticator
 
 TOKEN = 'a-token'
+TOKEN_V3 = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ64'
+TOKEN_V4 = '0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef'
 
 class AuthenticatorTest(test_util.TempDirTestCase,
                         dns_test_common_lexicon.BaseLexiconAuthenticatorTest):
@@ -17,8 +20,6 @@ class AuthenticatorTest(test_util.TempDirTestCase,
     def setUp(self):
         super(AuthenticatorTest, self).setUp()
 
-        from certbot_dns_linode.dns_linode import Authenticator
-
         path = os.path.join(self.tempdir, 'file.ini')
         dns_test_common.write({"linode_key": TOKEN}, path)
 
@@ -31,6 +32,32 @@ def setUp(self):
         # _get_linode_client | pylint: disable=protected-access
         self.auth._get_linode_client = mock.MagicMock(return_value=self.mock_client)
 
+    # _get_linode_client | pylint: disable=protected-access
+    # _setup_credentials | pylint: disable=protected-access
+    def test_api_v3(self):
+        path = os.path.join(self.tempdir, 'file_3.ini')
+        dns_test_common.write({"linode_key": TOKEN_V3}, path)
+
+        config = mock.MagicMock(linode_credentials=path,
+                                linode_propagation_seconds=0)
+        auth = Authenticator(config, "linode")
+        auth._setup_credentials()
+        client = auth._get_linode_client()
+        self.assertEqual(3, client.api_version)
+
+    # _get_linode_client | pylint: disable=protected-access
+    # _setup_credentials | pylint: disable=protected-access
+    def test_api_v4(self):
+        path = os.path.join(self.tempdir, 'file_4.ini')
+        dns_test_common.write({"linode_key": TOKEN_V4}, path)
+
+        config = mock.MagicMock(linode_credentials=path,
+                                linode_propagation_seconds=0)
+        auth = Authenticator(config, "linode")
+        auth._setup_credentials()
+        client = auth._get_linode_client()
+        self.assertEqual(4, client.api_version)
+
 class LinodeLexiconClientTest(unittest.TestCase, dns_test_common_lexicon.BaseLexiconClientTest):
 
     DOMAIN_NOT_FOUND = Exception('Domain not found')
@@ -38,7 +65,19 @@ class LinodeLexiconClientTest(unittest.TestCase, dns_test_common_lexicon.BaseLex
     def setUp(self):
         from certbot_dns_linode.dns_linode import _LinodeLexiconClient
 
-        self.client = _LinodeLexiconClient(TOKEN)
+        self.client = _LinodeLexiconClient(TOKEN, 3)
+
+        self.provider_mock = mock.MagicMock()
+        self.client.provider = self.provider_mock
+
+class Linode4LexiconClientTest(unittest.TestCase, dns_test_common_lexicon.BaseLexiconClientTest):
+
+    DOMAIN_NOT_FOUND = Exception('Domain not found')
+
+    def setUp(self):
+        from certbot_dns_linode.dns_linode import _LinodeLexiconClient
+
+        self.client = _LinodeLexiconClient(TOKEN, 4)
 
         self.provider_mock = mock.MagicMock()
         self.client.provider = self.provider_mock
diff --git a/setup.py b/setup.py
index c91aabd4fc..0bfb424606 100644
--- a/setup.py
+++ b/setup.py
@@ -7,7 +7,7 @@
 install_requires = [
     'acme>=0.21.1',
     'certbot>=0.21.1',
-    'dns-lexicon>=2.2.1',
+    'dns-lexicon>=2.2.3',
     'mock',
     'setuptools',
     'zope.interface',

From 752aa2732728aa871289db8d792756e65dc637b1 Mon Sep 17 00:00:00 2001
From: Trinopoty Biswas <trinopoty@hotmail.com>
Date: Wed, 12 Dec 2018 16:25:32 +0530
Subject: [PATCH 2/2] certbot-dns-linode : Added credentials ini option to
 override automatic api version detection

---
 .../certbot_dns_linode/__init__.py            |  1 +
 .../certbot_dns_linode/dns_linode.py          | 21 +++++---
 .../certbot_dns_linode/dns_linode_test.py     | 50 ++++++++++++++++---
 3 files changed, 58 insertions(+), 14 deletions(-)

diff --git a/certbot_dns_linode/__init__.py b/certbot_dns_linode/__init__.py
index fee4fdf4e8..96e8ff2959 100644
--- a/certbot_dns_linode/__init__.py
+++ b/certbot_dns_linode/__init__.py
@@ -36,6 +36,7 @@
 
    # Linode API credentials used by Certbot
    dns_linode_key = 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ64
+   dns_linode_version = [<blank>|3|4]
 
 The path to this file can be provided interactively or using the
 ``--dns-linode-credentials`` command-line argument. Certbot records the path
diff --git a/certbot_dns_linode/dns_linode.py b/certbot_dns_linode/dns_linode.py
index 125909239f..6a3803992b 100644
--- a/certbot_dns_linode/dns_linode.py
+++ b/certbot_dns_linode/dns_linode.py
@@ -57,13 +57,18 @@ def _cleanup(self, domain, validation_name, validation):
 
     def _get_linode_client(self):
         api_key = self.credentials.conf('key')
-        api_version = 3
+        api_version = self.credentials.conf('version')
 
-        # Match for v4 api key
-        regex_v4 = re.compile('^[0-9a-f]{64}$')
-        regex_match = regex_v4.match(api_key)
-        if regex_match:
-            api_version = 4
+        if not api_version:
+            api_version = 3
+
+            # Match for v4 api key
+            regex_v4 = re.compile('^[0-9a-f]{64}$')
+            regex_match = regex_v4.match(api_key)
+            if regex_match:
+                api_version = 4
+        else:
+            api_version = int(api_version)
 
         return _LinodeLexiconClient(api_key, api_version)
 
@@ -75,6 +80,7 @@ class _LinodeLexiconClient(dns_common_lexicon.LexiconClient):
     def __init__(self, api_key, api_version):
         super(_LinodeLexiconClient, self).__init__()
         self.api_version = api_version
+
         if api_version == 3:
             self.provider = linode.Provider({
                 'provider_name': 'linode',
@@ -85,6 +91,9 @@ def __init__(self, api_key, api_version):
                 'provider_name': 'linode4',
                 'auth_token': api_key
             })
+        else:
+            raise errors.PluginError('Invalid api version specified: {0}.'
+                                     .format(api_version))
 
     def _handle_general_error(self, e, domain_name):
         if not str(e).startswith('Domain not found'):
diff --git a/certbot_dns_linode/dns_linode_test.py b/certbot_dns_linode/dns_linode_test.py
index 43ecb07892..fe6ee225f5 100644
--- a/certbot_dns_linode/dns_linode_test.py
+++ b/certbot_dns_linode/dns_linode_test.py
@@ -5,6 +5,7 @@
 
 import mock
 
+from certbot import errors
 from certbot.plugins import dns_test_common
 from certbot.plugins import dns_test_common_lexicon
 from certbot.tests import util as test_util
@@ -32,10 +33,9 @@ def setUp(self):
         # _get_linode_client | pylint: disable=protected-access
         self.auth._get_linode_client = mock.MagicMock(return_value=self.mock_client)
 
-    # _get_linode_client | pylint: disable=protected-access
-    # _setup_credentials | pylint: disable=protected-access
-    def test_api_v3(self):
-        path = os.path.join(self.tempdir, 'file_3.ini')
+    # pylint: disable=protected-access
+    def test_api_version_3_detection(self):
+        path = os.path.join(self.tempdir, 'file_3_auto.ini')
         dns_test_common.write({"linode_key": TOKEN_V3}, path)
 
         config = mock.MagicMock(linode_credentials=path,
@@ -45,10 +45,9 @@ def test_api_v3(self):
         client = auth._get_linode_client()
         self.assertEqual(3, client.api_version)
 
-    # _get_linode_client | pylint: disable=protected-access
-    # _setup_credentials | pylint: disable=protected-access
-    def test_api_v4(self):
-        path = os.path.join(self.tempdir, 'file_4.ini')
+    # pylint: disable=protected-access
+    def test_api_version_4_detection(self):
+        path = os.path.join(self.tempdir, 'file_4_auto.ini')
         dns_test_common.write({"linode_key": TOKEN_V4}, path)
 
         config = mock.MagicMock(linode_credentials=path,
@@ -58,6 +57,41 @@ def test_api_v4(self):
         client = auth._get_linode_client()
         self.assertEqual(4, client.api_version)
 
+    # pylint: disable=protected-access
+    def test_api_version_3_manual(self):
+        path = os.path.join(self.tempdir, 'file_3_manual.ini')
+        dns_test_common.write({"linode_key": TOKEN_V4, "linode_version": 3}, path)
+
+        config = mock.MagicMock(linode_credentials=path,
+                                linode_propagation_seconds=0)
+        auth = Authenticator(config, "linode")
+        auth._setup_credentials()
+        client = auth._get_linode_client()
+        self.assertEqual(3, client.api_version)
+
+    # pylint: disable=protected-access
+    def test_api_version_4_manual(self):
+        path = os.path.join(self.tempdir, 'file_4_manual.ini')
+        dns_test_common.write({"linode_key": TOKEN_V3, "linode_version": 4}, path)
+
+        config = mock.MagicMock(linode_credentials=path,
+                                linode_propagation_seconds=0)
+        auth = Authenticator(config, "linode")
+        auth._setup_credentials()
+        client = auth._get_linode_client()
+        self.assertEqual(4, client.api_version)
+
+    # pylint: disable=protected-access
+    def test_api_version_error(self):
+        path = os.path.join(self.tempdir, 'file_version_error.ini')
+        dns_test_common.write({"linode_key": TOKEN_V3, "linode_version": 5}, path)
+
+        config = mock.MagicMock(linode_credentials=path,
+                                linode_propagation_seconds=0)
+        auth = Authenticator(config, "linode")
+        auth._setup_credentials()
+        self.assertRaises(errors.PluginError, auth._get_linode_client)
+
 class LinodeLexiconClientTest(unittest.TestCase, dns_test_common_lexicon.BaseLexiconClientTest):
 
     DOMAIN_NOT_FOUND = Exception('Domain not found')
