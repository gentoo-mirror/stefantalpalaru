diff -ur work.orig/kernel/nvidia/nvlink_linux.c work/kernel/nvidia/nvlink_linux.c
--- work.orig/kernel/nvidia/nvlink_linux.c	2021-06-03 01:10:01.000000000 +0200
+++ work/kernel/nvidia/nvlink_linux.c	2021-11-08 14:35:20.350178891 +0100
@@ -597,7 +597,11 @@
         // the requested timeout has expired, loop until less
         // than a jiffie of the desired delay remains.
         //
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 14, 0))
         current->state = TASK_INTERRUPTIBLE;
+#else
+	WRITE_ONCE(current->__state, TASK_INTERRUPTIBLE);
+#endif
         do
         {
             schedule_timeout(jiffies);
diff -ur work.orig/kernel/nvidia/os-interface.c work/kernel/nvidia/os-interface.c
--- work.orig/kernel/nvidia/os-interface.c	2021-06-03 01:09:57.000000000 +0200
+++ work/kernel/nvidia/os-interface.c	2021-11-08 14:35:20.350178891 +0100
@@ -580,7 +580,11 @@
         // the requested timeout has expired, loop until less
         // than a jiffie of the desired delay remains.
         //
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 14, 0))
         current->state = TASK_INTERRUPTIBLE;
+#else
+	WRITE_ONCE(current->__state, TASK_INTERRUPTIBLE);
+#endif
         do
         {
             schedule_timeout(jiffies);
diff -ur work.orig/kernel/nvidia-drm/nvidia-drm-drv.c work/kernel/nvidia-drm/nvidia-drm-drv.c
--- work.orig/kernel/nvidia-drm/nvidia-drm-drv.c	2021-06-03 01:10:01.000000000 +0200
+++ work/kernel/nvidia-drm/nvidia-drm-drv.c	2021-11-08 14:35:48.877004698 +0100
@@ -20,6 +20,7 @@
  * DEALINGS IN THE SOFTWARE.
  */
 
+#include <linux/version.h>
 #include "nvidia-drm-conftest.h" /* NV_DRM_AVAILABLE and NV_DRM_DRM_GEM_H_PRESENT */
 
 #include "nvidia-drm-priv.h"
@@ -811,7 +812,9 @@
 
     dev->dev_private = nv_dev;
     nv_dev->dev = dev;
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 14, 0))
     dev->pdev = pdev;
+#endif
 
     /* Register DRM device to DRM sub-system */
 
diff -ur work.orig/kernel/nvidia-uvm/uvm_linux.h work/kernel/nvidia-uvm/uvm_linux.h
--- work.orig/kernel/nvidia-uvm/uvm_linux.h	2021-06-03 01:09:58.000000000 +0200
+++ work/kernel/nvidia-uvm/uvm_linux.h	2021-11-08 14:35:20.351178920 +0100
@@ -475,7 +475,11 @@
 #elif (NV_WAIT_ON_BIT_LOCK_ARGUMENT_COUNT == 4)
     static __sched int uvm_bit_wait(void *word)
     {
+#if (LINUX_VERSION_CODE < KERNEL_VERSION(5, 14, 0))
         if (signal_pending_state(current->state, current))
+#else
+        if (signal_pending_state(current->__state, current))
+#endif
             return 1;
         schedule();
         return 0;
